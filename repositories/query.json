{
  "preLogin": {
    "insertNewNeighbours": "CALL insertNewNeighbours(?, ?, ?, ?, ?, ?, ?,?,?,?,?)",
    "insertNewREDeveloper": "CALL insertNewREDeveloper(?,?,?,?,?,?,?,?,?,?,?,?,?)",
    "insertNewAdmin": "call insertNewAdmin(?, ?, ?, ?)",
    "insertUserSession": "CALL insertSessionToken(?,?,?)",
    "userLogin": "CALL doLogin(?, ?)",
    "insertTemporaryToken": "CALL insertTemporaryToken(?,?,?)",
    "findSessionByToken": "CALL findSessionByToken(?)",
    "findSessionById": "CALL findSessionById(?,?,?)",
    "loginWithTempToken": "CALL loginWithTempToken(?,?)",
    "forgotPasswordStep1": "CALL forgotPasswordStep1(?,?,?)",
    "insertUserTemporarySession": "INSERT INTO `temporary_session`(userId,token,userType)VALUES(?,?,?)",
    "forgotPasswordStep2": "CALL forgotPasswordStep2(?,?,?,?,?)",
    "updateNewREDeveloper": "CALL updateNewREDeveloper(?,?) ",
    "getNeighbourByUserId": "SELECT * FROM neighbours WHERE userId = ? and isActive = 1",
    "getDeveloperByUserId": "SELECT * FROM re_developer WHERE userId = ? and isActive = 1",
    "ActivateREDeveloperAccount": "UPDATE re_developer SET isDeleted = 0, isActive=1 WHERE userId = ?",
    "getNeighbourByEmail": "SELECT * FROM neighbours WHERE email = ? and isActive = 1",
    "activeAccount": "CALL activateAccountAndProjects(?,?)"
  },
  "postLogin": {
    "createNewProjectStep3old": "INSERT INTO `project`(userId, userType, projectName, projectAddress, zipCode, latitude, longitude, buidlingHeight, propertySize, floorPlan, residentialUnits, maximumCapacity, projectDescription, presentationVideo, projectImage, viewedUserId, thisProjectNumberLikedUserIds, projectDescriptionLikedUserIds, benefitLikedUserIds) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, '[]', '[]', '[]', '[]' )",
    "createNewProjectStep5Old": "INSERT INTO `project`(userId, userType, projectName, projectAddress, zipCode, latitude, longitude, buidlingHeight, propertySize, floorPlan, residentialUnits, maximumCapacity, projectDescription, presentationVideo, projectImage, benefit, viewedUserId, thisProjectNumberLikedUserIds, projectDescriptionLikedUserIds, benefitLikedUserIds) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, '[]', '[]', '[]', '[]' )",
    "logoutUser": "CALL logoutUser(?, ?, ?, ?)",
    "envelopeDetails": "call envelopeDetails(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "getDetailsDocusign": "call getDetailsDocusign(?, ?)",
    "updatePushTokenDetails": " CALL updatePushTokenDetails(?,?,?,?,?)",
    "editREDeveloperProfile": " CALL editREDeveloperProfile(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)",
    "getMyPassword": "CALL getMyPassword(?,?)",
    "updatePassword": "CALL updateMyPassword(?,?,?)",
    "editNeighboursProfile": " CALL editNeighboursProfile(?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "editAdminProfile": "CALL editAdminProfile(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)",
    "updateDraftProject": "CALL updateProject( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )",
    "updateProject": "CALL updateProject(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "getMyProject": "CALL getMyProjectByUserId(?)",
    "getMyProjectNew": "CALL getMyProjectByUserIdNew(?, ?)",
    "addCommentsOnProject": " CALL addCommentsOnProject(?,?,?,?,?)",
    "getUserProfile": "CALL getUserProfile(?,?)",
    "getUserDetail": "CALL getUserDetail(?,?)",
    "getUserNotificationSettings": "CALL getUserNotificationSettings(?,?)",
    "getLikedUserIds": "CALL getLikedUserIds(?,?,?)",
    "getProjectByProjectIdForREDeveloper": "CALL getProjectByProjectIdForREDeveloper(?, ?)",
    "addAddressOnNeighboursold": "UPDATE neighbours SET streetAddress=?, city=?, state=?, zipCode=? WHERE userId=? AND  isActive=1",
    "addAddressOnNeighbours": "UPDATE neighbours SET address=? WHERE userId=? AND  isActive=1",
    "getNearByProjectWithLimit": "SELECT p.projectId, p.projectName,p.coverImage , p.projectAddress, p.zipCode, p.latitude,p.longitude,(3959 * ACOS(COS(RADIANS(?)) * COS(RADIANS(p.latitude)) *  COS(RADIANS(p.longitude) - RADIANS(?)) + SIN(RADIANS(?)) * SIN(RADIANS(p.latitude)))) AS distance FROM project p JOIN re_developer r ON r.userId = p.userId WHERE r.isActive = 1 AND  p.isDeleted = 0 AND  isInDraft = 0  HAVING distance <= ? ORDER BY distance LIMIT ? OFFSET ?;",
    "getNearByProjectWithoutLimit": "SELECT p.projectId, p.projectName,p.coverImage , p.projectAddress, p.zipCode, p.latitude,p.longitude,(3959 * ACOS(COS(RADIANS(?)) * COS(RADIANS(p.latitude)) *  COS(RADIANS(p.longitude) - RADIANS(?)) + SIN(RADIANS(?)) * SIN(RADIANS(p.latitude)))) AS distance FROM project p JOIN re_developer r ON r.userId = p.userId WHERE r.isActive = 1 AND  p.isDeleted = 0 AND  isInDraft = 0  HAVING distance <= ? ORDER BY distance;",
    "getNearByProject": "call getNearByProject(?, ?, ?, ?)",
    "getNearByProjectOffline": "call getNearByProjectOffline(?, ?, ?, ?, ?)",
    "addNeighboursQuestionAnswers": " UPDATE neighbours SET questions= ? WHERE userId=? ",
    "getProjectDetails": " CALL  getProjectDetails(?,?)",
    "addInPublishProject": "CALL addInPublishProject(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "addLikesOnProject": "CALL addLikesOnProject(?, ?, ?)",
    "addLikesOnPorjectImage": "CALL addLikesOnProjectImage(?,?,?)",
    "addLikesOnUpdatesComment": "CALL addLikesOnUpdatesComment(?, ?, ?)",
    "replyToProjectComment": "CALL replyToProjectComment(?, ?, ?, ?, ?, ?)",
    "editREDeveloperNotificationSettings1": "UPDATE `re_developer` SET isNewResponsesByProject=?, isYimbyUpdates=?, isReceiveEmails=?, isNewFeedbackByProject=?,  isProjectStatusChangeByTeam=?, isFeatureUpdates=?, isNewsAboutYimby=?, isAccountOrSecurityIssues=?, isProjectCompletion=? WHERE userId=?",
    "editREDeveloperNotificationSettings2": "UPDATE `re_developer` SET isNewResponsesByProject=?, isProjectStatusByTeam=?, isYimbyUpdates=?, isReceiveEmails=? WHERE userId=?",
    "editNeighboursNotificationSettings1": "UPDATE `neighbours` SET isNewProjectsYourArea=?, isUpdatesProjectYourArea=?, isCommentApprovals=?, isResponsesYourComments=?, isReceiveEmails=?, isResponsesYourCommentsByEmail=?, isFeatureUpdates=?, isAboutYimby=?, isAccountSecurity=?, isThemesMode=? WHERE userId=?",
    "editNeighboursNotificationSettings2": "UPDATE `neighbours` SET isNewProjectsYourArea=?, isUpdatesProjectYourArea=?, isCommentApprovals=?, isResponsesYourComments=?, isReceiveEmails=?, isThemesMode=? WHERE userId=?",
    "getComments": "SELECT JSON_ARRAYAGG(JSON_OBJECT('commentId',c.commentId,'projectId',c.projectId,'comment',c.comment,'userId',c.userId,'firstName',n.firstName,'surName',n.surName,'profile',n.profile,'createAt',c.createdAt,'replies',(SELECT JSON_ARRAYAGG(JSON_OBJECT('replyId',cr.replyId,'userId',cr.userId,'projectId',cr.projectId,'commentId',cr.commentId,'comment',cr.comment,'createdAt',cr.createdAt,'firstName',re.firstName,'surName',re.surName,'profile',re.profilePhoto)) FROM `commentreplies` cr JOIN re_developer re ON re.userId=cr.userId WHERE cr.commentId = c.commentId AND cr.projectId=c.projectId AND cr.isDeleted=0)))AS commentDetails FROM comments c JOIN neighbours n ON n.userId=c.userId WHERE  c.projectId=? AND c.updatesId=? AND c.isDeleted=0 ORDER BY c.commentId",
    "getThemeReDeveloper": "SELECT isThemesMode FROM re_developer WHERE userId = ?",
    "getThemeAdmin": "SELECT isThemesMode FROM admins WHERE userId = ?",
    "reviewYourCommentByProjectId": "CALL reviewYourCommentByProjectId(?, ?, ?, ?)",
    "getUpdates": "SELECT JSON_ARRAYAGG(JSON_OBJECT('updatesId',u.updatesId,'projectId',u.projectId,'updateTitle',u.updateTitle,'updateDescription',u.updateDescription,'updateCommentLikes',u.updateCommentLikes,'updateCommentLikedUserIds',u.updateCommentLikedUserIds,'createdOn',u.createdOn,'commentCount',(SELECT COUNT(commentId) FROM comments  WHERE updatesId=u.updatesId))) AS previousUpdates FROM `updates` u WHERE u.projectId=? AND u.updatesId!=(SELECT MAX(updatesId)FROM updates WHERE projectId=?)",
    "getProjectCardSubtopicBycardId": "CALL getProjectCardSubtopicBycardId(?, ?)",
    "createNewProjectStep3": "CALL createNewProjectStep3(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "createNewProjectStep5": "CALL createNewProjectStep5(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "changeTheme": "CALL changeTheme(?, ?, ?)",
    "setDeviceToken": "CALL setDeviceToken(?, ?, ?)",
    "changeNotification": "CALL changeNotification(?, ?, ?, ?, ?, ?)",
    "addbeHeardComment": "CALL addbeHeardComment(?, ?, ?, ?, ?,?)",
    "addLikesOnProjectCardSubTopic": "CALL addLikesOnProjectCardSubTopic(?, ?, ?, ?)",
    "removeProjectImages": "CALL removeProjectImage(?, ?, ?)",
    "removeProjectVideo": "CALL removeProjectVideo(?, ?)",
    "removeProjectCardSubTopic": " CALL removeProjectCardSubTopic(?, ?, ?, ?)",
    "removeProjectCardSubTopicImage": "CALL removeProjectCardSubTopicImage(?, ?, ?, ?)",
    "getProjectByProjectIdForNeighbours": " CALL getProjectByProjectIdForNeighbours(?,?)",
    "addCommentsOnProjectCardSubTopic": "CALL addCommentsOnProjectCardSubTopic(?, ?, ?, ?, ?)",
    "deleteAccount": "CALL deleteAccount(?, ?, ?)",
    "updateMyActivitesForREDeveloper": "CALL updateMyActivitesForREDeveloper(?, ?, ?, ?, ?, ?, ?, ?)",
    "cardAgreeOrDisAgree": " CALL cardAgreeOrDisAgree(?, ?, ?, ?, ?)",
    "updateMyActivitiesForNeighbours": "CALL updateMyActivitiesForNeighbours(?, ?, ?, ?, ?, ?, ?)",
    "getCommentsBySubTopicId": "CALL getCommentsBySubTopicId(?, ?, ?, ?, ?)",
    "getMyActivities": "CALL getMyActivites(?, ?, ?)",
    "getPreDefinedCards": "SELECT staticCardId, cardTitle, cardIcon,cardDescription FROM `project_static_cards` WHERE isDeleted=0;",
    "getProjectVotingResult": "CALL getProjectVotingResult(?, ?)",
    "pushNotificationList": "call pushNotificationList(?, ?, ?, ?)",
    "getReUsers": "call getReUsers(?,?,?,?)",
    "editReUser": "call adminEditUsers(?, ?, ?, ?)",
    "referToFriend": "call referToFriend(?,?,?)",
    "getReDeveloper": "SELECT * FROM re_developer WHERE email = ? AND phoneNumber = ? ",
    "commentsInNotif": "call commentsInNotif(?, ?, ?)",
    "getAnswers": "SELECT answer FROM neighbour_survey_answers WHERE userId = ? ",
    "getProjectsForREdeveloper": "SELECT * FROM project WHERE userId = ? and isDeleted = 0",
    "deleteProject": "call deleteProjectNew(?,?)",
    "insertCard": "call insertCard(?,?,?,?,?)",
    "getAllCards": "SELECT * FROM cards WHERE userId = ? and isDeleted = 0",
    "getNeighbours": "call getNeighbours(?)",
    "getDevelopers": "call getDevelopers(?)",
    "getRequests": "call getRequests(?)",
    "getAllCardsNew": "Call getAllCardsNew(?,?,?)",
    "getProjectCard": "SELECT * FROM project_cards WHERE CardId = ? and isDeleted = 0",
    "getCard": "SELECT * FROM cards WHERE id = ? and isDeleted = 0",
    "getProjectCards": "SELECT * FROM cards WHERE id IN (select cardId from project_cards where projectId= ?)",
    "deleteCard": "call deleteCard(?,?)",
    "deleteAllCardsForProject": "call deleteAllCardsForProject(?)",
    "updateCard": "call updateCard(?,?,?,?,?,?)",
    "projectsForApproval": "SELECT * FROM project WHERE projectStatus = 'draft' and isDeleted = 0",
    "insertProjectCard": "INSERT INTO project_cards (cardId,projectId) VALUES (?,?)",
    "approveRequestForProject": "UPDATE project SET projectStatus = 'active', isInDraft=TRUE WHERE projectId = ? and isDeleted = 0",
    "rejectRequestForProject": "UPDATE project SET isDeleted = 1 WHERE projectId = ? and isDeleted = 0",
    "fetchRequest": "call fetchRequests(?)",
    "rejectRequest": "call rejectRequest(?, ?)",
    "approveRequest": "call approveRequest(?, ?)",
    "getNeighboursAndComments": "call getNeighboursAndComments(?,?,?,?,?)",
    "getRequestDetail": "call getRequestDetail(?,?)",
    "addDeveloperRequest": "INSERT INTO requests (requestType,requestTime,userId,changedData) VALUES ('New Developer',CURRENT_TIMESTAMP(),?,?)",
    "addUpdateProjectRequest": "INSERT INTO requests (requestType,requestTime,userId,projectId,changedData) VALUES ('Updated Project',CURRENT_TIMESTAMP(),?,?,?)",
    "addNewProjectRequest": "INSERT INTO requests (requestType,requestTime,userId,projectId,changedData) VALUES ('New Project',CURRENT_TIMESTAMP(),?,?,?)",
    "addPushNotification": "insert into pushnotifications (fromUserId, fromUserType, toUserId, toUserType, activityId, activityType, message, createdOn, modifiedOn, projectId) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
    "adminDashboard": "call adminDashbourd()",
    "developerDashboard": "call developerDashbourd(?)",
    "projectsForAdmin": "call getProjectsForAdmin(?)",
    "projectsForDeveloper": "call getProjectsForDeveloper(?,?)",
    "projectsForDashboard": "call projectsForDashbourd(?,?,?)",
    "usersForDashboard": "call usersForDasboard(?)",
    "requestForDsahboard": "call requestForDsahboard(?,?,?)",
    "getAllProjectForAdmin": "call getAllProjectForAdmin(?,?)"
  }
}
